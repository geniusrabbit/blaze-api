enum OptionType {
  UNDEFINED,
  USER,
  ACCOUNT,
  SYSTEM
}

"""
Option type definition represents a single option of the user or the system.
"""
type Option {
  type:       OptionType!
  targetID:   ID64!
  name:       String!
  value:      NullableJSON
}

"""
The edge type for Option.
"""
type OptionEdge {
  cursor: String!
  node: Option!
}

"""
The connection type for Option.
"""
type OptionConnection {
  """
  The total number of campaigns
  """
  totalCount: Int!

  """
  A list of edges.
  """
  edges: [OptionEdge!]!

  """
  A list of options.
  """
  list: [Option!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

type OptionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String!

  """
  Option name
  """
  name: String!

  """
  Option value
  """
  option: Option
}

###############################################################################
# Query
###############################################################################

input OptionListFilter {
  type:         [OptionType!]
  targetID:     [ID64!]
  name:         [String!]
  namePattern:  [String!]
}

input OptionListOrder {
  type:         Ordering
  targetID:     Ordering
  name:         Ordering
  value:        Ordering
}

###############################################################################
# Query declarations
###############################################################################

extend type Query {
  """
  Get the option value by name
  """
  option(name: String!, type: OptionType! = USER, targetID: ID64! = 0): OptionPayload! @hasPermissions(permissions: ["option.get.*"])

  """
  List of the option values which can be filtered and ordered by some fields
  """
  listOptions(
    filter: OptionListFilter = null,
    order: OptionListOrder = null,
    page: Page = null
  ): OptionConnection @hasPermissions(permissions: ["option.list.*"])
}

extend type Mutation {
  """
  Set the option value
  """
  setOption(name: String!, value: NullableJSON, type: OptionType! = USER, targetID: ID64! = 0): OptionPayload! @hasPermissions(permissions: ["option.set.*"])
}
