
"""
User represents a user object of the system
"""
type User {
  """
  The primary key of the user
  """
  ID:       ID64!

  """
  Unical user name
  """
  username: String!

  """
  Status of user active
  """
  status: ApproveStatus!

  createdAt: Time!
  updatedAt: Time!
}

type UserEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: User
}

"""
UserConnection implements collection accessor interface with pagination.
"""
type UserConnection {
  """
  The total number of campaigns
  """
  totalCount: Int!

  """
  The edges for each of the users's lists
  """
  edges: [UserEdge!]

  """
  A list of the users, as a convenience when edges are not needed.
  """
  list: [User!]

  """
  Information for paginating this connection
  """
  pageInfo: PageInfo!
}

"""
UserPayload wrapper to access of user oprtation results
"""
type UserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationID: String!

  """
  User ID operation result
  """
  userID: ID64!

  """
  User object accessor
  """
  user: User
}

###############################################################################
# Query
###############################################################################

"""
UserListFilter implements filter for user list query
"""
input UserListFilter {
  ID: [ID64!]
  accountID: [ID64!]
  emails: [String!]
  roles: [ID64!]
}

"""
UserListOrder implements order for user list query
"""
input UserListOrder {
  ID:                 Ordering
  email:              Ordering
  username:           Ordering
  status:             Ordering
  registrationDate:   Ordering
  country:            Ordering
  manager:            Ordering
  createdAt:          Ordering
  updatedAt:          Ordering
}

###############################################################################
# Mutations
###############################################################################

input UserInput {
  username: String
  status: ApproveStatus
}

type Profile {
  ID:           ID64!
  user:         User!
  firstName:    String!
  lastName:     String!
  companyName:  String!
  about:        String!
  email:        String!
  messgangers: [ProfileMessanger!]

  createdAt: Time!
  updatedAt: Time!
}

enum MessangerType {
  SKYPE
  AIM
  ICQ
  WHATSAPP
  TELEGRAM
  VIBER
  PHONE
}

type ProfileMessanger {
  mtype: MessangerType!
  address: String!
}
